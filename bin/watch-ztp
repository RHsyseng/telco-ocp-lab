#!/bin/bash
set -euo pipefail

cluster(){
   echo '=====> INFRAENV:'
   oc get infraenv -n "$1"
   echo '=====> BMH:'
   oc get bmh -n "$1"
   echo '=====> Agents:'
   oc get agent -n "$1"  -o custom-columns=HOST:".spec.hostname",ROLE:".spec.role",NS:".metadata.namespace",APPROVED:".spec.approved",NAME:".metadata.name",STAGE:".status.progress.currentStage",STATEINFO:".status.debugInfo.stateInfo"  --sort-by=".spec.hostname"
   echo '=====> AgentClusterInstall Messages:'
   oc get agentclusterinstall -n "$1" "$1" -o jsonpath={.status.conditions} | jq "." | grep message
   echo '=====> ManagedCluster'
   oc get managedcluster "$1"
   echo '=====> clusterdeployment'
   oc get clusterdeployment -n "$1" "$1"
   oc -n "$1" wait clusterdeployment "$1" --for=condition=Provisioned --timeout=10s 2>/dev/null && exit 0
}

policies(){
  oc -n ztp-install get cgu "$1"
  oc get policy -n "$1" --sort-by=".metadata.annotations.ran\.openshift\.io\/ztp-deploy-wave" \
    -o custom-columns=WAVE:".metadata.annotations.ran\.openshift\.io\/ztp-deploy-wave",NS:".metadata.namespace",NAME:".metadata.name",STATUS:".status.compliant",REMEDIATION:".spec.remediationAction"

  oc -n ztp-install wait cgu "$1" --for=condition=Succeeded --timeout=10s 2>/dev/null && exit 0
}

while true; do
  echo '#############################'
  date
  "$1" "${2:-5gc}" || true
  sleep 60
  echo '#############################'
  echo ''
done


# oc -n ""$CLUSTER"" get policies -o json \
#   | jq -r '.items[] |  .metadata.annotations."ran.openshift.io/ztp-deploy-wave" + " " + .metadata.name + " " + .status.compliant ' \
#   | sort -g -t ":" -k 3
#
